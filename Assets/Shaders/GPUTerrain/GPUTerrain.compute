#pragma kernel TerrainNodeBuild
#pragma kernel TerrainLODMap
#pragma kernel TerrainVisibleRender

#include "./GPUTerrainUtility.hlsl"

AppendStructuredBuffer<uint2> appendNodeList;
ConsumeStructuredBuffer<uint2> consumeNodeList;
AppendStructuredBuffer<uint3> finalNodeList;

uniform float4 _worldParams;
uniform uint _curLodLevel;
uniform float3 _cameraPos;

bool CalcuteSubdivide(uint2 node)
{
    float3 nodePositionWS = GetNodeWorldPosition(node, _curLodLevel);
    //TODO: Currently we move camerapos to xz plane
    float3 cameraPos = float3(_cameraPos.x,0,_cameraPos.z);
    float dist = distance(_cameraPos, nodePositionWS);

    return false;
}

[numthreads(1,1,1)]
void TerrainNodeBuild (uint3 id : SV_DispatchThreadID)
{
    uint2 curNode = consumeNodeList.Consume();
}

[numthreads(1,1,1)]
void TerrainLODMap (uint3 id : SV_DISPATCHTHREADID)
{

}

[numthreads(1,1,1)]
void TerrainVisibleRender (uint3 id : SV_DISPATCHTHREADID)
{

}